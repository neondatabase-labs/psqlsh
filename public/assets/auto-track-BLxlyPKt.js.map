{"version":3,"file":"auto-track-BLxlyPKt.js","sources":["../../../node_modules/@segment/analytics-next/dist/pkg/core/auto-track.js"],"sourcesContent":["import { pTimeout } from './callback';\n// Check if a user is opening the link in a new tab\nfunction userNewTab(event) {\n    var typedEvent = event;\n    if (typedEvent.ctrlKey ||\n        typedEvent.shiftKey ||\n        typedEvent.metaKey ||\n        (typedEvent.button && typedEvent.button == 1)) {\n        return true;\n    }\n    return false;\n}\n// Check if the link opens in new tab\nfunction linkNewTab(element, href) {\n    if (element.target === '_blank' && href) {\n        return true;\n    }\n    return false;\n}\nexport function link(links, event, properties, options) {\n    var _this = this;\n    var elements = [];\n    // always arrays, handles jquery\n    if (!links) {\n        return this;\n    }\n    if (links instanceof Element) {\n        elements = [links];\n    }\n    else if ('toArray' in links) {\n        elements = links.toArray();\n    }\n    else {\n        elements = links;\n    }\n    elements.forEach(function (el) {\n        el.addEventListener('click', function (elementEvent) {\n            var _a, _b;\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var href = el.getAttribute('href') ||\n                el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') ||\n                el.getAttribute('xlink:href') ||\n                ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n            var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n            if (!linkNewTab(el, href) &&\n                !userNewTab(elementEvent)) {\n                if (href) {\n                    elementEvent.preventDefault\n                        ? elementEvent.preventDefault()\n                        : (elementEvent.returnValue = false);\n                    trackEvent\n                        .catch(console.error)\n                        .then(function () {\n                        window.location.href = href;\n                    })\n                        .catch(console.error);\n                }\n            }\n        }, false);\n    });\n    return this;\n}\nexport function form(forms, event, properties, options) {\n    var _this = this;\n    // always arrays, handles jquery\n    if (!forms)\n        return this;\n    if (forms instanceof HTMLFormElement)\n        forms = [forms];\n    var elements = forms;\n    elements.forEach(function (el) {\n        if (!(el instanceof Element))\n            throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n        var handler = function (elementEvent) {\n            var _a;\n            elementEvent.preventDefault\n                ? elementEvent.preventDefault()\n                : (elementEvent.returnValue = false);\n            var ev = event instanceof Function ? event(el) : event;\n            var props = properties instanceof Function ? properties(el) : properties;\n            var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n            trackEvent\n                .catch(console.error)\n                .then(function () {\n                el.submit();\n            })\n                .catch(console.error);\n        };\n        // Support the events happening through jQuery or Zepto instead of through\n        // the normal DOM API, because `el.submit` doesn't bubble up events...\n        var $ = window.jQuery || window.Zepto;\n        if ($) {\n            $(el).submit(handler);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            el.addEventListener('submit', handler, false);\n        }\n    });\n    return this;\n}\n//# sourceMappingURL=auto-track.js.map"],"names":["userNewTab","event","typedEvent","linkNewTab","element","href","link","links","properties","options","_this","elements","el","elementEvent","_a","_b","ev","props","trackEvent","pTimeout","form","forms","handler","$"],"mappings":"iWAEA,SAASA,EAAWC,EAAO,CACvB,IAAIC,EAAaD,EACjB,MAAI,GAAAC,EAAW,SACXA,EAAW,UACXA,EAAW,SACVA,EAAW,QAAUA,EAAW,QAAU,EAInD,CAEA,SAASC,EAAWC,EAASC,EAAM,CAC/B,MAAI,GAAAD,EAAQ,SAAW,UAAYC,EAIvC,CACO,SAASC,EAAKC,EAAON,EAAOO,EAAYC,EAAS,CACpD,IAAIC,EAAQ,KACRC,EAAW,CAAA,EAEf,OAAKJ,GAGDA,aAAiB,QACjBI,EAAW,CAACJ,CAAK,EAEZ,YAAaA,EAClBI,EAAWJ,EAAM,UAGjBI,EAAWJ,EAEfI,EAAS,QAAQ,SAAUC,EAAI,CAC3BA,EAAG,iBAAiB,QAAS,SAAUC,EAAc,CACjD,IAAIC,EAAIC,EACJC,EAAKf,aAAiB,SAAWA,EAAMW,CAAE,EAAIX,EAC7CgB,EAAQT,aAAsB,SAAWA,EAAWI,CAAE,EAAIJ,EAC1DH,EAAOO,EAAG,aAAa,MAAM,GAC7BA,EAAG,eAAe,+BAAgC,MAAM,GACxDA,EAAG,aAAa,YAAY,KAC1BE,EAAKF,EAAG,qBAAqB,GAAG,EAAE,CAAC,KAAO,MAAQE,IAAO,OAAS,OAASA,EAAG,aAAa,MAAM,GACnGI,EAAaC,EAAST,EAAM,MAAMM,EAAIC,EAAOR,GAAmD,CAAE,CAAA,GAAIM,EAAKL,EAAM,SAAS,WAAa,MAAQK,IAAO,OAASA,EAAK,GAAG,EACvK,CAACZ,EAAWS,EAAIP,CAAI,GACpB,CAACL,EAAWa,CAAY,GACpBR,IACAQ,EAAa,eACPA,EAAa,eAAgB,EAC5BA,EAAa,YAAc,GAClCK,EACK,MAAM,QAAQ,KAAK,EACnB,KAAK,UAAY,CAClB,OAAO,SAAS,KAAOb,CAC/C,CAAqB,EACI,MAAM,QAAQ,KAAK,EAGnC,EAAE,EAAK,CAChB,CAAK,EACM,MArCI,IAsCf,CACO,SAASe,EAAKC,EAAOpB,EAAOO,EAAYC,EAAS,CACpD,IAAIC,EAAQ,KAEZ,GAAI,CAACW,EACD,OAAO,KACPA,aAAiB,kBACjBA,EAAQ,CAACA,CAAK,GAClB,IAAIV,EAAWU,EACf,OAAAV,EAAS,QAAQ,SAAUC,EAAI,CAC3B,GAAI,EAAEA,aAAc,SAChB,MAAM,IAAI,UAAU,iDAAiD,EACzE,IAAIU,EAAU,SAAUT,EAAc,CAClC,IAAIC,EACJD,EAAa,eACPA,EAAa,eAAgB,EAC5BA,EAAa,YAAc,GAClC,IAAIG,EAAKf,aAAiB,SAAWA,EAAMW,CAAE,EAAIX,EAC7CgB,EAAQT,aAAsB,SAAWA,EAAWI,CAAE,EAAIJ,EAC1DU,EAAaC,EAAST,EAAM,MAAMM,EAAIC,EAAOR,GAAmD,CAAE,CAAA,GAAIK,EAAKJ,EAAM,SAAS,WAAa,MAAQI,IAAO,OAASA,EAAK,GAAG,EAC3KI,EACK,MAAM,QAAQ,KAAK,EACnB,KAAK,UAAY,CAClBN,EAAG,OAAM,CACzB,CAAa,EACI,MAAM,QAAQ,KAAK,CACpC,EAGYW,EAAI,OAAO,QAAU,OAAO,MAC5BA,EACAA,EAAEX,CAAE,EAAE,OAAOU,CAAO,EAIpBV,EAAG,iBAAiB,SAAUU,EAAS,EAAK,CAExD,CAAK,EACM,IACX","x_google_ignoreList":[0]}